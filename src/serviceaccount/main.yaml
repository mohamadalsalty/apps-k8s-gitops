apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-k8s-api

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: list-all-resources-clusterrole
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "configmaps", "secrets", "namespaces"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bind-sa-k8s-api-clusterrole
subjects:
- kind: ServiceAccount
  name: sa-k8s-api
  namespace: default
roleRef:
  kind: ClusterRole
  name: list-all-resources-clusterrole
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Secret
metadata:
  name: sa-k8s-api-token
  annotations:
    kubernetes.io/service-account.name: sa-k8s-api
type: kubernetes.io/service-account-token
# To get the secret use kubectl get secret sa-k8s-api-token -n default -o jsonpath="{.data.token}" | base64 --decode
