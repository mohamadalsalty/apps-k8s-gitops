##################### Network Policy #####################
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: golang-k8s-api-dev-allow-only-namespace
  namespace: dev
spec:
  podSelector:
    matchLabels:
      app: golang-k8s-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - {}
  egress:
  - {}
---
##################### Deployment #####################
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: golang-k8s-api
  name: golang-k8s-api
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: golang-k8s-api
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: golang-k8s-api
    spec:
      containers:
      - name: golang-k8s-api
        image: mohamadalsalty/k8s-dash:fa1b411799e14a928dafb21d62e1e53b1f97f53b
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: golang-k8s-api
          mountPath: config
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "250Mi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /clusterinfo
            port: 8080
        readinessProbe:
          httpGet:
            path: /clusterinfo
            port: 8080
      volumes:
      - name: golang-k8s-api
        secret:
          secretName: golang-k8s-api
          items:
          - key: dotenv-golang-k8s-api
            path: .env            
status: {}